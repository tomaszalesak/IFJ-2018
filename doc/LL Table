<prog> -> <main>
<main> -> <stat><main>
<main> -> <func><main>
<main> -> EOL
	 <main>
<main> -> EOF

<stat> -> id = <expr> EOL
<stat> -> id EOL
<stat> -> <expr> EOL
<stat> -> if <expr> then EOL
			<st-list>
		  else EOL
			<st-list>
		  end EOL
<stat> -> while <expr> do EOL
			<st-list>
	   	  end EOL
<stat> -> id = <func-call>
<stat> -> <func-call>

<stat> -> inputs()
<stat> -> inputi()
<stat> -> inputf()
<stat> -> print(<arg-list-print>)
<stat> -> length(<arg-list>)
<stat> -> substr()
<stat> -> ord()
<stat> -> chr()

<st-list> -> <stat><st-list>

<func> -> def id (<param-l> EOL
			<st-list> END 
<param-l> -> <param> <param-l2>
<param-l2> -> , <param> <param-l2>
<param-l2> -> )

<param> -> id

<func-call> -> id <arg-list>
<func-call> -> id (<arg-listb> EOL 

<arg-list> -> <arg> <arg-list2>
<arg-list> -> EOL
<arg-list2> -> , <arg> <arg-list2>
<arg-list2> -> EOL

<arg-listb> -> <arg> <arg-list2b>
<arg-listb> -> )
<arg-list2b> -> , <arg> <arg-list2b>
<arg-list2b> -> )

<arg-list-print> -> <arg> <arg-list2>

<arg> -> id
<arg> -> int
<arg> -> float
<arg> -> string
